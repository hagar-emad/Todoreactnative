{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport styles from \"./styles\";\nvar UIManager = NativeModules.UIManager;\nUIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\nexport default function TodoHeader(_ref) {\n  var onAdd = _ref.onAdd;\n\n  var _useState = useState(\"new task\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      todo = _useState2[0],\n      setTodo = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      focused = _useState4[0],\n      setFocused = _useState4[1];\n\n  var handleAddTodo = function handleAddTodo() {\n    var todo = {\n      title: todo,\n      done: false\n    };\n    onAdd(todo);\n    setTodo(\"\");\n  };\n\n  return React.createElement(View, {\n    style: styles.header\n  }, React.createElement(TextInput, {\n    placeholder: \"Add New Task\",\n    style: styles.txtInput,\n    value: todo,\n    onChangeText: function onChangeText(txt) {\n      return setTodo(txt);\n    },\n    onFocus: function onFocus() {\n      LayoutAnimation.easeInEaseOut();\n      setFocused(true);\n    },\n    onBlur: function onBlur() {\n      LayoutAnimation.easeInEaseOut();\n      setFocused(false);\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.btn,\n    onPress: handleAddTodo\n  }, React.createElement(Text, {\n    style: styles.btntxt\n  }, \"ADD\")));\n}","map":{"version":3,"sources":["C:/Users/ayamm/Downloads/iti/React Native/Day1/lab1/Todo/TodoHeader.js"],"names":["React","useState","styles","UIManager","NativeModules","setLayoutAnimationEnabledExperimental","TodoHeader","onAdd","todo","setTodo","focused","setFocused","handleAddTodo","title","done","header","txtInput","txt","LayoutAnimation","easeInEaseOut","btn","btntxt"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,OAAOC,MAAP;AACA,IAAQC,SAAR,GAAsBC,aAAtB,CAAQD,SAAR;AACAA,SAAS,CAACE,qCAAV,IACIF,SAAS,CAACE,qCAAV,CAAgD,IAAhD,CADJ;AAGA,eAAe,SAASC,UAAT,OAA6B;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AACxC,kBAAwBN,QAAQ,CAAC,UAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8BR,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAMJ,IAAI,GAAG;AACTK,MAAAA,KAAK,EAAEL,IADE;AAETM,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIAP,IAAAA,KAAK,CAACC,IAAD,CAAL;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAPD;;AAQA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACa;AAApB,KACI,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,cAAvB;AACI,IAAA,KAAK,EACDb,MAAM,CAACc,QAFf;AAMI,IAAA,KAAK,EAAER,IANX;AAOI,IAAA,YAAY,EAAE,sBAACS,GAAD;AAAA,aAASR,OAAO,CAACQ,GAAD,CAAhB;AAAA,KAPlB;AAQI,IAAA,OAAO,EAAE,mBAAM;AACXC,MAAAA,eAAe,CAACC,aAAhB;AACAR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAXL;AAYI,IAAA,MAAM,EAAE,kBAAM;AACVO,MAAAA,eAAe,CAACC,aAAhB;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AAfL,IADJ,EAkBI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAET,MAAM,CAACkB,GAAhC;AAAqC,IAAA,OAAO,EAAER;AAA9C,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACmB;AAApB,WADJ,CAlBJ,CADJ;AA0BH","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport { TextInput, TouchableOpacity, View, Text, NativeModules, LayoutAnimation } from \"react-native\";\r\nimport styles from \"./styles\";\r\nconst { UIManager } = NativeModules;\r\nUIManager.setLayoutAnimationEnabledExperimental &&\r\n    UIManager.setLayoutAnimationEnabledExperimental(true);\r\n\r\nexport default function TodoHeader({onAdd}) {\r\n    const [todo, setTodo] = useState(\"new task\");\r\n    const [focused, setFocused] = useState(false);\r\n    const handleAddTodo = () => {\r\n        const todo = {\r\n            title: todo,\r\n            done: false\r\n        }\r\n        onAdd(todo);\r\n        setTodo(\"\");\r\n    }\r\n    return (\r\n        <View style={styles.header}>\r\n            <TextInput placeholder=\"Add New Task\"\r\n                style={\r\n                    styles.txtInput\r\n                 //   ...(focused ? styles.txtInputFoucused: {}),\r\n                }\r\n                //style={{ ...styles.txtInput, ...(focused ? styles.txtInputFoucused : {}) }}\r\n                value={todo}\r\n                onChangeText={(txt) => setTodo(txt)}\r\n                onFocus={() => {\r\n                    LayoutAnimation.easeInEaseOut()\r\n                    setFocused(true)\r\n                }}\r\n                onBlur={() => {\r\n                    LayoutAnimation.easeInEaseOut()\r\n                    setFocused(false)\r\n                }\r\n                }></TextInput>\r\n            <TouchableOpacity style={styles.btn} onPress={handleAddTodo}>\r\n                <Text style={styles.btntxt}>ADD</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
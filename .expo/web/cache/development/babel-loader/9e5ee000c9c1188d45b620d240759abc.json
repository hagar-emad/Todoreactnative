{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Checkbox from \"expo-checkbox\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./styles\";\n\nvar TodoList = function TodoList(_ref) {\n  var todos = _ref.todos;\n\n  var _useState = useState(todos.length),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemsCompleted = _useState2[0],\n      setItemsComplested = _useState2[1];\n\n  var handCheckbox = function handCheckbox(item) {\n    if (itemsCompleted !== 0) {\n      setItemsComplested(itemsCompleted - 1);\n    }\n\n    todos.map(function (todo, index) {\n      if (todo === item) {\n        item.done = true;\n      }\n    });\n  };\n\n  useEffect(function () {\n    setItemsComplested(todos.length);\n  }, [todos]);\n  return React.createElement(FlatList, {\n    style: {\n      height: \"100%\"\n    },\n    data: todos,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.item\n      }, React.createElement(Text, null, \" Title: \"), React.createElement(Text, null, \" \", item.title, \" \"), React.createElement(Text, null, itemsCompleted.length), React.createElement(Checkbox, {\n        value: item.done,\n        onChange: function onChange() {\n          return handCheckbox(item);\n        }\n      }));\n    },\n    ListHeaderComponent: function ListHeaderComponent() {\n      return React.createElement(Text, {\n        style: styles.listHeader\n      }, \"My todos \", itemsCompleted, \" of \", todos.length);\n    },\n    ListFooterComponent: function ListFooterComponent() {\n      return React.createElement(Text, {\n        style: styles.listHeader\n      }, \"End of Todos\");\n    },\n    ListEmptyComponent: function ListEmptyComponent() {\n      return React.createElement(Text, null, \"no todos today \");\n    },\n    ItemSeparatorComponent: function ItemSeparatorComponent() {\n      return React.createElement(View, {\n        style: styles.seperator\n      });\n    }\n  });\n};\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/gogo/Downloads/New folder/Todo/TodoList.js"],"names":["React","useEffect","useState","Checkbox","styles","TodoList","todos","length","itemsCompleted","setItemsComplested","handCheckbox","item","map","todo","index","done","height","title","listHeader","seperator"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,eAArB;;;;AAEA,OAAOC,MAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC5B,kBAA6CJ,QAAQ,CAACI,KAAK,CAACC,MAAP,CAArD;AAAA;AAAA,MAAOC,cAAP;AAAA,MAAuBC,kBAAvB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC3B,QAAIH,cAAc,KAAK,CAAvB,EAA0B;AACtBC,MAAAA,kBAAkB,CAACD,cAAc,GAAG,CAAlB,CAAlB;AACH;;AACDF,IAAAA,KAAK,CAACM,GAAN,CAAU,UAACC,IAAD,EAAMC,KAAN,EAAc;AACpB,UAAGD,IAAI,KAAGF,IAAV,EAAe;AAElBA,QAAAA,IAAI,CAACI,IAAL,GAAU,IAAV;AACI;AACJ,KALD;AAMH,GAVD;;AAWAd,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,kBAAkB,CAACH,KAAK,CAACC,MAAP,CAAlB;AACH,GAFQ,EAEN,CAACD,KAAD,CAFM,CAAT;AAIA,SACI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAE;AAAV,KADX;AAEI,IAAA,IAAI,EAAEV,KAFV;AAGI,IAAA,UAAU,EAAE,2BAAc;AAAA,UAAXK,IAAW,SAAXA,IAAW;AACtB,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACO;AAApB,SACI,oBAAC,IAAD,mBADJ,EAEI,oBAAC,IAAD,aAAQA,IAAI,CAACM,KAAb,MAFJ,EAGI,oBAAC,IAAD,QAAOT,cAAc,CAACD,MAAtB,CAHJ,EAII,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEI,IAAI,CAACI,IAAtB;AAA4B,QAAA,QAAQ,EAAE;AAAA,iBAAML,YAAY,CAACC,IAAD,CAAlB;AAAA;AAAtC,QAJJ,CADJ;AAQH,KAZL;AAaI,IAAA,mBAAmB,EAAE;AAAA,aAAM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACc;AAApB,sBAA0CV,cAA1C,UAA8DF,KAAK,CAACC,MAApE,CAAN;AAAA,KAbzB;AAcI,IAAA,mBAAmB,EAAE;AAAA,aAAM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACc;AAApB,wBAAN;AAAA,KAdzB;AAeI,IAAA,kBAAkB,EAAE;AAAA,aAAM,oBAAC,IAAD,0BAAN;AAAA,KAfxB;AAgBI,IAAA,sBAAsB,EAAE;AAAA,aAAM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEd,MAAM,CAACe;AAApB,QAAN;AAAA;AAhB5B,IADJ;AAqBH,CAtCD;;AAuCA,eAAed,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Checkbox from \"expo-checkbox\";\r\nimport { FlatList, View, Text } from \"react-native\";\r\nimport styles from \"./styles\";\r\n\r\nconst TodoList = ({ todos }) => {\r\n    const [itemsCompleted, setItemsComplested] = useState(todos.length);\r\n    const handCheckbox = (item) => {\r\n        if (itemsCompleted !== 0) {\r\n            setItemsComplested(itemsCompleted - 1);\r\n        }\r\n        todos.map((todo,index)=>{\r\n            if(todo===item){\r\n         //       todos.splice(index,1);\r\n         item.done=true;\r\n            }         \r\n        })\r\n    }\r\n    useEffect(() => {\r\n        setItemsComplested(todos.length)\r\n    }, [todos]);\r\n\r\n    return (\r\n        <FlatList\r\n            style={{ height: \"100%\" }}\r\n            data={todos}\r\n            renderItem={({ item }) => {\r\n                return (\r\n                    <View style={styles.item}>\r\n                        <Text> Title: </Text>\r\n                        <Text> {item.title} </Text>\r\n                        <Text>{itemsCompleted.length}</Text>\r\n                        <Checkbox value={item.done} onChange={() => handCheckbox(item)} />\r\n                    </View>\r\n                );\r\n            }}\r\n            ListHeaderComponent={() => <Text style={styles.listHeader}>My todos {itemsCompleted} of {todos.length}</Text>}\r\n            ListFooterComponent={() => <Text style={styles.listHeader}>End of Todos</Text>}\r\n            ListEmptyComponent={() => <Text>no todos today </Text>}\r\n            ItemSeparatorComponent={() => <View style={styles.seperator}></View>}\r\n\r\n        />\r\n    )\r\n};\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}
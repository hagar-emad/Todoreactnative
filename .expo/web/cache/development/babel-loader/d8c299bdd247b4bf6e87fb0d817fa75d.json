{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Checkbox from \"expo-checkbox\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./styles\";\n\nvar TodoList = function TodoList(_ref) {\n  var todos = _ref.todos;\n\n  var _useState = useState(todos.length),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemsCompleted = _useState2[0],\n      setItemsComplested = _useState2[1];\n\n  var handCheckbox = function handCheckbox() {\n    if (itemsCompleted !== 0) {\n      setItemsComplested(itemsCompleted - 1);\n    }\n  };\n\n  useEffect(function () {\n    setItemsComplested(todos.length);\n  }, [todos]);\n  return React.createElement(React.Fragment, null, todos.map((todo, function (index) {\n    React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Text, null, \" Title: \"), React.createElement(Text, null, \" \", item.title, \" \"), React.createElement(Text, null, itemsCompleted.length), React.createElement(Checkbox, {\n      value: item.done,\n      onChange: function onChange() {\n        return handCheckbox();\n      }\n    }));\n  })));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/ayamm/Downloads/iti/React Native/Day1/lab1/Todo/TodoList.js"],"names":["React","useEffect","useState","Checkbox","styles","TodoList","todos","length","itemsCompleted","setItemsComplested","handCheckbox","map","todo","index","item","title","done"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,eAArB;;;;AAEA,OAAOC,MAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC5B,kBAA6CJ,QAAQ,CAACI,KAAK,CAACC,MAAP,CAArD;AAAA;AAAA,MAAOC,cAAP;AAAA,MAAuBC,kBAAvB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,QAAIF,cAAc,KAAK,CAAvB,EAA0B;AACtBC,MAAAA,kBAAkB,CAACD,cAAc,GAAG,CAAlB,CAAlB;AACH;AACJ,GAJD;;AAKAP,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,kBAAkB,CAACH,KAAK,CAACC,MAAP,CAAlB;AACH,GAFQ,EAEN,CAACD,KAAD,CAFM,CAAT;AAIA,SACI,0CACKA,KAAK,CAACK,GAAN,EAAWC,IAAI,EAAE,UAAAC,KAAK,EAAI;AACvB,wBAAC,IAAD;AAAM,MAAA,KAAK,EAAET,MAAM,CAACU;AAApB,OACI,oBAAC,IAAD,mBADJ,EAEI,oBAAC,IAAD,aAAQA,IAAI,CAACC,KAAb,MAFJ,EAGI,oBAAC,IAAD,QAAOP,cAAc,CAACD,MAAtB,CAHJ,EAII,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEO,IAAI,CAACE,IAAtB;AAA4B,MAAA,QAAQ,EAAE;AAAA,eAAMN,YAAY,EAAlB;AAAA;AAAtC,MAJJ;AAMH,GAPA,EADL,CADJ;AA+BH,CA1CD;;AA2CA,eAAeL,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Checkbox from \"expo-checkbox\";\r\nimport { FlatList, View, Text } from \"react-native\";\r\nimport styles from \"./styles\";\r\n\r\nconst TodoList = ({ todos }) => {\r\n    const [itemsCompleted, setItemsComplested] = useState(todos.length);\r\n    const handCheckbox = () => {\r\n        if (itemsCompleted !== 0) {\r\n            setItemsComplested(itemsCompleted - 1);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setItemsComplested(todos.length)\r\n    }, [todos]);\r\n\r\n    return (\r\n        <>\r\n            {todos.map((todo, index => {\r\n                <View style={styles.item}>\r\n                    <Text> Title: </Text>\r\n                    <Text> {item.title} </Text>\r\n                    <Text>{itemsCompleted.length}</Text>\r\n                    <Checkbox value={item.done} onChange={() => handCheckbox()} />\r\n                </View>\r\n            }))}\r\n        </>\r\n        // <FlatList\r\n        //     style={{ height: \"100%\" }}\r\n        //     data={todos}\r\n        //     renderItem={({ item }) => {\r\n        //         return (\r\n        //             <View style={styles.item}>\r\n        //                 <Text> Title: </Text>\r\n        //                 <Text> {item.title} </Text>\r\n        //                 <Text>{itemsCompleted.length}</Text>\r\n        //                 <Checkbox value={item.done} onChange={() => handCheckbox()} />\r\n        //             </View>\r\n        //         );\r\n        //     }}\r\n        //     ListHeaderComponent={() => <Text style={styles.listHeader}>My todos {itemsCompleted} of {todos.length}</Text>}\r\n        //     ListFooterComponent={() => <Text style={styles.listHeader}>End of Todos</Text>}\r\n        //     ListEmptyComponent={() => <Text>no todos today </Text>}\r\n        //     ItemSeparatorComponent={() => <View style={styles.seperator}></View>}\r\n\r\n        // />\r\n    )\r\n};\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}